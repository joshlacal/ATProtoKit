extension ATProtoClient.{{ template_namespace_name }} {
    /// {{ description }}
    public func {{ procedure_name | lowerCamelCase }}({% if input_struct_name %}input: {{ input_struct_name }}{% endif %}) async throws -> {% if output_type %}(responseCode: Int, data: {{ output_type }}?){% else %}Int{% endif %} {
        let endpoint = "{{ endpoint }}"
        
        {% if input_struct_name %}
        let requestData = try JSONEncoder().encode(input)
        {% else %}
        let requestData: Data? = nil
        {% endif %}
        
        let urlRequest = try await networkManager.createURLRequest(
            endpoint: endpoint, 
            method: "POST", 
            headers: ["Content-Type": "application/json"], 
            body: requestData,
            queryItems: nil
        )
        
        let (responseData, response) = try await networkManager.performRequest(urlRequest)
        let responseCode = response.statusCode

        {% if output_type %}
        let decoder = ZippyJSONDecoder()
        let decodedData = try? decoder.decode({{ output_type }}.self, from: responseData)
        return (responseCode, decodedData)
        {% else %}
        // Return only the response code if no output type is expected
        return responseCode
        {% endif %}
    }
}
